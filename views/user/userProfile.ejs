<%- include('../layouts/userheader.ejs') %>

<main class="main">
  <div class="page-header breadcrumb-wrap">
      <div class="container">
          <div class="breadcrumb">
              <a href="index.html" rel="nofollow">Home</a>
              <span></span> Pages
              <span></span> Account
          </div>
      </div>
  </div>
  <section class="pt-60 pb-150">
      <div class="container">
          <div class="row">
              <div class="col-lg-10 m-auto">
                  <div class="row">
                      <div class="col-md-4">
                          <div class="dashboard-menu">
                              <ul class="nav flex-column" role="tablist">
                                  <!-- <li class="nav-item">
                                      <a class="nav-link active" id="dashboard-tab" data-bs-toggle="tab" href="#dashboard" role="tab" aria-controls="dashboard" aria-selected="false"><i class="fi-rs-settings-sliders mr-10"></i>Dashboard</a>
                                  </li> -->
                                  <li class="nav-item">
                                    <a class="nav-link"   href="/userprofile" ><i class="fi-rs-user mr-10"></i>Account details</a>
                                </li>
                                <li class="nav-item">
                                  <a class="nav-link" href="/userAddress"><i class="fi-rs-marker mr-10"></i>My Address</a>
                              </li>
                                  <li class="nav-item">
                                      <a class="nav-link"  href="/orderSuccess" ><i class="fi-rs-shopping-bag mr-10"></i>Orders</a>
                                  </li>
                                  <li class="nav-item">
                                    <a class="nav-link" href="/Wallets"><i class="fi-rs-shopping-bag mr-10"></i>Wallets</a>
                                  </li>
                                  <li class="nav-item">
                                    <a class="nav-link"  href="/coupons" ><i class="fi-rs-shopping-bag mr-10"></i>coupon</a>
                                  </li>
                                  <li class="nav-item">
                                      <a class="nav-link" id="track-orders-tab" data-bs-toggle="tab" href="#track-orders" role="tab" aria-controls="track-orders" aria-selected="false"><i class="fi-rs-shopping-cart-check mr-10"></i>Track Your Order</a>
                                  </li>
                             
                              
                                  <li class="nav-item">
                                      <a class="nav-link" href="/logout"><i class="fi-rs-sign-out mr-10"></i>Logout</a>
                                  </li>
                              </ul>
                          </div>
                      </div>
                      <div class="col-md-8">
                      
                             
                                  <div class="card">
                                    <section class="content-body p-xl-4">
                                      <form action="/userprofile" enctype="multipart/form-data"  method="post" onsubmit="return validationChecking()">
                                          <div class="row">
                                              <div class="col-lg-8">
                                                  <div class="row gx-3">
                                                      <input type="hidden" name="user_id"  value="<%=userData._id%>">
                                                      <div class="col-12  mb-3">
                                                          <label class="form-label"> name</label>
                                                          <input class="form-control" name="name" value="<%=userData.name%>" id="user_name"  type="text" placeholder="Type here">
                                                          <div
                                                          id="errorName"
                                                          class="ms-2 text-danger"
                                                        ></div>
                                                      </div> 
                                                   
                                                      <div class="col-lg-12  mb-3">
                                                          <label class="form-label">Email</label>
                                                          <input class="form-control" type="email" name="email" value="<%=userData.email%>" id="user_email" placeholder="example@mail.com" disabled>
                                                          <div
                                                          id="errorMail"
                                                          class="ms-2 text-danger"
                                                        ></div>
                                                        </div> 
                                                      <div class="col-lg-12  mb-3">
                                                          <label class="form-label">Phone</label>
                                                          <input class="form-control" type="tel" name="mobile" value="<%=userData.mobile%>" id="user_phone" placeholder="+1234567890">
                                                          <div
                                                          id="errorMobile"
                                                          class="ms-2 text-danger"
                                                        ></div>
                                                        </div> 
                                                    
                                              
                                             
                                                  </div> 
                                              </div> 
                                              <aside class="col-lg-4">
                                                  <figure class="text-lg-center">
                                                      <% 
                                                          if (userData.image) {
                                                              %><img class="img-lg mb-3 img-avatar" id="previewImage" src="/assets/imgs/user/<%=userData.image %>" alt="User Photo"><%
                                                          }else{
                                                              %><img class="img-lg mb-3 img-avatar" id="previewImage" src="adminassets/imgs/people/avatar1.jpg" alt="User Photo"><%
       
                                                          }
                                                          %>
                                                      <figcaption>
                                                        <label for="fileUpload"  class="btn btn-light rounded font-md">
                                                          <i class="icons material-icons md-backup font-md"></i> Upload
                                                        </label>
                                                        <input type="file" name="image" id="fileUpload" style="display: none;"  >
                                                        <div
                                                          id="errorfileUpload"
                                                          class="ms-2 text-danger"
                                                        ></div>
                                                      </figcaption>
                                                    </figure>
                                              </aside> 
                                          </div> 
                                          <br>
                                          <button id="saveChangesButton" class="btn btn-primary" type="submit">Save changes</button>
                                      </form>
                                      <hr class="my-5">
                                      <div class="row" style="max-width:920px">
                                          <div class="col-md">
                                              <article class="box mb-3 bg-light">
                                                  <button class="btn float-end btn-light btn-sm rounded font-md"  data-bs-toggle="modal" data-bs-target="#exampleModal" >Change</button>
                                                  <h6>Password</h6>
                                                  <small class="text-muted d-block" style="width:70%">You can reset or change your password by clicking here</small>
                                              </article>
                                          </div> 
                                          <div class="col-md">
                                         
                                          </div> 
                                      </div> 
                                   
      
                                  </section> 
                                  </div>
                       
                           
                         
                            
                     
                      </div>
                  </div>
              </div>
          </div>
      </div>

      <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="exampleModalLabel">Reset Password</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="passwordChangeForm" action="/resetPassword" onsubmit="return validationPasswordChecking()">
          <div class="form-group">
            <input
              type="password"
              id="currentPassword"
              name="currentPassword"
              placeholder="Enter Current Password"
            />
            <div
              id="errorCurrentPassword"
              class="ms-2 text-danger"
            ></div>
          </div>
        
          <div class="form-group">
            <input
              type="password"
              id="newPassword"
              name="newPassword"
              placeholder="Enter New Password"
            />
            <div
              id="errorpassword"
              class="ms-2 text-danger"
            ></div>
          </div>
        
          <div class="form-group">
            <input
              type="password"
              id="cpassword"
              placeholder="Confirm New Password"
            />
            <div
              id="errorcpassword"
              class="mt-0 ms-2 text-danger"
            ></div>
          </div>
        
          <div class="form-group text-center">
            <button type="submit" class="btn btn-fill-out btn-block hover-up">Submit</button>
          </div>
        </form>
        
        
        
    </div>
  </div>
</div>
  </section>
</main>

<script>
  document.getElementById('fileUpload').addEventListener('change', function(event) {
    const file = event.target.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onload = function(e) {
        document.getElementById('previewImage').src = e.target.result;
      };
      reader.readAsDataURL(file);
    }
  });
  

  document.addEventListener('DOMContentLoaded', function () {
  const user_name = document.getElementById("user_name");
  const errorName = document.getElementById("errorName");
  const user_phone = document.getElementById("user_phone");
  const errorMobile = document.getElementById("errorMobile");
  const fileUpload = document.getElementById("fileUpload");
  const errorfileUpload = document.getElementById("errorfileUpload");
  const password = document.getElementById("password");
  const errorpassword = document.getElementById("errorpassword");
  const cpassword = document.getElementById("cpassword");
  const errorcpassword = document.getElementById("errorcpassword");


  user_name.addEventListener('input', function () {
    errorName.innerHTML = user_name.value.trim() === "" ? "Please enter user name" : /^[a-zA-Z ]+$/.test(user_name.value) == false ? "Please enter alphabets only" : "";
  });

  user_phone.addEventListener('input', function () {
    errorMobile.innerHTML = user_phone.value.trim() === "" ? "Please enter user phone number" : /^\d{10}$/.test(user_phone.value) == false ? "Please enter valid phone number" : "";
  });

  password.addEventListener('input', function () {
    errorpassword.innerHTML = password.value.trim() === "" ? "Please enter password" : password.value.length < 8 ? "Please enter a minimum of 8 characters" : "";
  });
  cpassword.addEventListener('input', function () {
    errorcpassword.innerHTML = cpassword.value.trim() === "" ? "Please enter password" :  (cpassword.value !== password.value) ? "Passwords do not match" : "";
  });


});
function validationChecking(event) {
  const user_name = document.getElementById("user_name");
  const errorName = document.getElementById("errorName");
  const user_phone = document.getElementById("user_phone");
  const errorMobile = document.getElementById("errorMobile");
  const fileUpload = document.getElementById("fileUpload");
  const errorfileUpload = document.getElementById("errorfileUpload");

  errorName.innerHTML =
    user_name.value.trim() === ""
      ? "Please enter user name"
      : /^[a-zA-Z ]+$/.test(user_name.value) == false
      ? "Please enter alphabets only"
      : "";
  errorMobile.innerHTML =
    user_phone.value.trim() === ""
      ? "Please enter user phone number"
      : /^\d{10}$/.test(user_phone.value) == false
      ? "Please enter valid phone number"
      : "";

  const uploadedFile = fileUpload.files[0];
  const existingImage = document.getElementById("previewImage");
  const defaultImageSrc = existingImage.getAttribute("src");
  const allowedTypes = [
  "image/jpeg",
  "image/png",
  "image/gif",
  "image/bmp",
  "image/webp",

];

  if (uploadedFile) {
    if (!allowedTypes.includes(uploadedFile.type)) {
      errorfileUpload.innerHTML = "Please upload a valid image file (JPEG, PNG, GIF)";
 
      return false;
    }
  } else {
    // If no new file is selected, maintain the existing image
    existingImage.setAttribute("src", defaultImageSrc);
  }

  if (errorName.innerHTML || errorMobile.innerHTML) return false;
  
  return true;
}

document.getElementById("passwordChangeForm").addEventListener("submit", async (e) => {
  e.preventDefault();


  const currentPassword = document.getElementById("currentPassword").value;
  const newPassword = document.getElementById("newPassword").value;
  const confirmPassword = document.getElementById("cpassword").value;

 
  const isValid = validationPasswordChecking(currentPassword, newPassword, confirmPassword);

 
  if (!isValid) {
    return false;
  }

  try {
   
    const response = await fetch('/resetPassword', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        currentPassword: currentPassword,
        newPassword: newPassword,
      }),
    });

    
    if (response.ok) {
      const data = await response.json();

      // Check for success flag in the response data
      if (!data.success) {
        // Show SweetAlert for unsuccessful password change
        Swal.fire({
          title: 'Error',
          text: 'Password change error: ' + data.message,
          icon: 'error',
        });
      } else {
        // Show SweetAlert for successful password change
        Swal.fire({
          icon: 'success',
          title: 'Password Changed!',
          text: 'Your password has been successfully changed.',
          showConfirmButton: false,
          timer: 2000,
        });

        // Wait for 2 seconds before redirecting
        await new Promise(resolve => setTimeout(resolve, 2000));

        // Redirect the page after password update
        window.location.href = '/userprofile';
      }
    } else {
      console.error('Failed to update password:', response.status);
      // Handle the error as needed
      Swal.fire({
        title: 'Error',
        text: 'Failed to update password. Please try again.',
        icon: 'error',
      });
    }
  } catch (error) {
    console.error('An unexpected error occurred:', error);
    // Handle the error as needed
    Swal.fire({
      title: 'Error',
      text: 'An unexpected error occurred. Please try again.',
      icon: 'error',
    });
  }
});

// Validation function (replace with your own implementation)
function validationPasswordChecking(currentPassword, newPassword, confirmPassword) {

  return true;
}


function validationPasswordChecking(currentPassword, newPassword, confirmPassword) {
  const errorCurrentPassword = document.getElementById("errorCurrentPassword");
  const errorpassword = document.getElementById("errorpassword");
  const errorcpassword = document.getElementById("errorcpassword");

  // Reset previous error messages
  errorCurrentPassword.textContent = "";
  errorpassword.textContent = "";
  errorcpassword.textContent = "";

  // Validation for the current password
  if (currentPassword.trim() === "") {
    errorCurrentPassword.textContent = "Please enter current password";
  }

  // Validation for the new password
  if (newPassword.trim() === "") {
    errorpassword.textContent = "Please enter password";
  } else if (newPassword.length < 8) {
    errorpassword.textContent = "Please enter a minimum of 8 characters";
  }

  // Validation for the confirm password
  if (confirmPassword.trim() === "") {
    errorcpassword.textContent = "Please enter password";
  } else if (confirmPassword !== newPassword) {
    errorcpassword.textContent = "Passwords do not match";
  }

  // Check if any validation error exists
  return !(errorCurrentPassword.textContent || errorpassword.textContent || errorcpassword.textContent);
}

function updateErrorMessages(errorMessage) {
  // Update the error message on the page
  const errorCurrentPassword = document.getElementById("errorCurrentPassword");
  errorCurrentPassword.textContent = errorMessage;
}

document.getElementById("saveChangesButton").addEventListener("click", async function(event) {
    event.preventDefault();

    const isValid = validationChecking();

    if (isValid) {
        const formData = {
            user_id: document.querySelector('input[name="user_id"]').value,
            name: document.querySelector('input[name="name"]').value,
            email: document.querySelector('input[name="email"]').value,
            mobile: document.querySelector('input[name="mobile"]').value,
            // Add other form fields as needed
        };
console.log(formData);
        try {
            const response = await fetch(`/userprofile`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json',
                },
                body: JSON.stringify(formData),
            });

            if (response.ok) {
                // Assume the update is successful
                showSuccessToast("Profile updated successfully");
            } else {
                // Handle the error
                console.error("Error updating profile:", response.status);
                showErrorToast("Profile update failed. Please try again.");
            }
        } catch (error) {
            // Handle other errors
            console.error("An unexpected error occurred:", error);
            showErrorToast("An unexpected error occurred. Please try again.");
        }
    } else {
        // Show an error toast if validation fails
        showErrorToast("Please fix the validation errors before submitting.");
    }
     // Function to show success toast
  function showSuccessToast(message) {
    Toastify({
      text: message,
      backgroundColor: "green",
      duration: 3000,
      close: true,
      gravity: "bottom",
      position: "right",
    }).showToast();
  }

  // Function to show error toast
  function showErrorToast(message) {
    Toastify({
      text: message,
      backgroundColor: "red",
      duration: 3000,
      close: true,
      gravity: "bottom",
      position: "right",
    }).showToast();
  }
});






</script>
          <%- include('../layouts/userfooter.ejs') %>




       